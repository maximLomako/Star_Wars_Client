{"version":3,"sources":["components/ItemsList/ItemsList.module.css","components/TextAreaField/TextAreaField.tsx","components/ItemsList/ItemsList.tsx","api/api.ts","components/CardInfo/CardInfo.tsx","utils/utils.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","default","padding","TextAreaField","props","classes","value","changeInputValue","hideSelectedItem","TextField","className","onChange","e","currentTarget","placeholder","display","justifyContent","maxWidth","ListItemTextStyles","textAlign","ItemsList","inputValue","listItemsValue","selectItem","hideItemList","getHighlightedText","listItemTextClass","s","items","map","el","i","ListItem","button","onClick","ListItemText","primary","name","title","group","instance","axios","create","baseURL","getResourse","url","get","then","res","data","results","catch","console","error","URL","dataAPI","minWidth","bullet","margin","transform","fontSize","pos","marginBottom","CardInfo","row1","row2","row3","row4","Card","CardContent","Typography","color","gutterBottom","variant","component","text","highlight","split","RegExp","part","toLowerCase","App","useState","setInputValue","setListItemsValue","selectedItem","setSelectedItem","setError","newValue","addGroupProperty","groupName","arr","useEffect","length","p1","p2","p3","p4","p5","p6","Promise","all","values","flat","renderDetailedView","useMemo","director","producer","episode_id","gender","height","hair_color","diameter","rotation_period","orbital_period","classification","designation","average_height","consumables","crew","manufacturer","model","vehicle_class","getDateForRenderDetailView","Alert","severity","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e2085b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"ItemsList_items__lvYb-\"};","import React, {ChangeEvent} from \"react\";\nimport {createStyles, makeStyles, TextField, Theme} from \"@material-ui/core\";\n\ninterface TextAreaFieldType {\n  value: string\n  changeInputValue: (newValue: string) => void\n  hideSelectedItem: () => void\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& > *': {\n        width: '300px',\n        backgroundColor: theme.palette.background.default,\n        padding: '5px'\n      },\n    },\n  }),\n);\n\nexport const TextAreaField: React.FC<TextAreaFieldType> = (props) => {\n  const classes = useStyles();\n  const {value, changeInputValue, hideSelectedItem} = props;\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    changeInputValue(e.currentTarget.value)\n    hideSelectedItem();\n  }\n\n  return (\n    <TextField\n      className={classes.root}\n      value={value}\n      onChange={onChangeHandler}\n      placeholder='input text here'\n    />\n  )\n}","import React, {ReactNode} from \"react\";\nimport {createStyles, ListItem, ListItemText, makeStyles, Theme} from \"@material-ui/core\";\nimport {ListItemsValueType} from \"../../types/ListItemsValueType\";\nimport s from './ItemsList.module.css'\n\ninterface ItemsListType {\n  inputValue: string\n  listItemsValue: Array<ListItemsValueType>\n  selectItem: (element: ListItemsValueType) => void\n  hideItemList: () => void\n  changeInputValue: (newValue: string) => void\n  getHighlightedText : (text: string, highlight: string) => ReactNode\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: '300px',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.default,\n    }\n  }),\n);\n\nconst ListItemTextStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      textAlign: 'end'\n    }\n  }),\n);\n\nexport const ItemsList: React.FC<ItemsListType> = (props) => {\n  const {inputValue, listItemsValue, selectItem, hideItemList, changeInputValue, getHighlightedText} = props;\n  const classes = useStyles();\n  const listItemTextClass = ListItemTextStyles();\n  return (\n    <div className={s.items}>\n      {listItemsValue.map((el, i) =>\n        <ListItem\n          className={classes.root}\n          key={i}\n          button\n          onClick={() => {\n            selectItem(el);\n            changeInputValue('');\n            hideItemList();\n          }}\n        >\n          <ListItemText primary={getHighlightedText(el.name || el.title || '', inputValue)}/>\n          <ListItemText className={listItemTextClass.root} primary={el.group}/>\n        </ListItem>)}\n    </div>\n  )\n}","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://swapi.dev/api',\n});\n\nconst getResourse = (url: string) => instance.get(url).then(res =>\n  res.data.results)\n  .catch(() => console.error(`Could not fetch url ${URL}`))\n\nexport const dataAPI = {\n  getAllFilms: (inputValue: string) => getResourse(`/films/?search=${inputValue}`),\n  getAllPeople: (inputValue: string) => getResourse(`/people/?search=${inputValue}`),\n  getAllPlanets: (inputValue: string) => getResourse(`/planets/?search=${inputValue}`),\n  getAllSpecies: (inputValue: string) => getResourse(`/species/?search=${inputValue}`),\n  getAllStarships: (inputValue: string) => getResourse(`/starships/?search=${inputValue}`),\n  getAllVehicles: (inputValue: string) => getResourse(`/vehicles/?search=${inputValue}`)\n}","import React from \"react\";\nimport {Card, CardContent, makeStyles, Typography} from \"@material-ui/core\";\n\ninterface StarshipDetailType {\n  row1: string\n  row2: string\n  row3: string\n  row4: string\n}\n\nexport const useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const CardInfo: React.FC<StarshipDetailType> = (props) => {\n  const {row1, row2, row3, row4} = props;\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n           {row2}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {row1}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n           {row3}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n           {row4}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React from \"react\";\n\nexport const getHighlightedText = (text: string, highlight: string) => {\n  const parts = text.split(new RegExp(`(${highlight})`, 'gi'));\n  return parts.map((part, i) => part.toLowerCase() === highlight.toLowerCase() ? <b key={i}>{part}</b> : part);\n}\nexport const getDateForRenderDetailView = (selectedItem: any) => {\n  if (!selectedItem) {\n    return {}\n  }\n  const {group, name} = selectedItem;\n  switch (group) {\n    case 'films': {\n      const {title, director, producer, episode_id: episodId} = selectedItem;\n      return  {row1: title, row2: director, row3: producer, row4: episodId}\n    }\n    case 'people': {\n      const {gender, height, hair_color: hairColor} = selectedItem;\n      return  {row1: name, row2: gender, row3: height, row4: hairColor}\n    }\n    case 'planets': {\n      const {diameter, rotation_period: rotationPeriod, orbital_period: orbitalPeriod} = selectedItem;\n      return  {row1: name, row2: diameter, row3: rotationPeriod, row4: orbitalPeriod}\n    }\n    case 'species': {\n      const {classification, designation, average_height: averageHeight} = selectedItem;\n      return  {row1: name, row2: classification, row3: designation, row4: averageHeight}\n    }\n    case 'starships': {\n      const {consumables, crew, manufacturer} = selectedItem;\n      return  {row1: name, row2: consumables, row3: crew, row4: manufacturer}\n    }\n    case 'vehicles': {\n      const {model, vehicle_class: vehicleClass, manufacturer} = selectedItem;\n      return  {row1: name, row2: model, row3: vehicleClass, row4: manufacturer}\n    }\n    default:\n      return {}\n  }\n}","import React, {useEffect, useMemo, useState} from 'react';\nimport {TextAreaField} from \"./components/TextAreaField/TextAreaField\";\nimport {ItemsList} from \"./components/ItemsList/ItemsList\";\nimport {dataAPI} from \"./api/api\";\nimport Alert from '@material-ui/lab/Alert';\nimport {CardInfo} from \"./components/CardInfo/CardInfo\";\nimport {getDateForRenderDetailView, getHighlightedText} from \"./utils/utils\";\nimport {ListItemsValueType} from \"./types/ListItemsValueType\";\nimport './App.css';\n\nconst App = () => {\n  const [inputValue, setInputValue] = useState<string>('');\n  const [listItemsValue, setListItemsValue] = useState<Array<ListItemsValueType> | null>(null);\n  const [selectedItem, setSelectedItem] = useState<any>(null);\n  const [error, setError] = useState<boolean>(false)\n  const changeInputValue = (newValue: string) => {\n    setInputValue(newValue);\n  }\n  const selectItem = (element: ListItemsValueType) => {\n    setSelectedItem(element);\n  }\n  const hideItemList = () => {\n    setListItemsValue(null);\n  }\n  const hideSelectedItem = () => {\n    setSelectedItem(null);\n  }\n  const addGroupProperty = (groupName: string, arr: ListItemsValueType[]) => {\n    return arr.map((el: ListItemsValueType) => ({...el, group: groupName}));\n  }\n  useEffect(() => {\n    if (inputValue.length >= 3) {\n      const p1 = dataAPI.getAllFilms(inputValue)\n        .then((data) => addGroupProperty('films', data));\n      const p2 = dataAPI.getAllPeople(inputValue)\n        .then((data) => addGroupProperty('people', data));\n      const p3 = dataAPI.getAllPlanets(inputValue)\n        .then((data) => addGroupProperty('planets', data));\n      const p4 = dataAPI.getAllSpecies(inputValue)\n        .then((data) => addGroupProperty('species', data));\n      const p5 = dataAPI.getAllStarships(inputValue)\n        .then((data) => addGroupProperty('starships', data));\n      const p6 = dataAPI.getAllVehicles(inputValue)\n        .then((data) => addGroupProperty('vehicles', data));\n\n      Promise.all([p1, p2, p3, p4, p5, p6])\n        .then(values => {\n          setListItemsValue(values.flat());\n        })\n        .catch(() => {\n          setError(true)\n        })\n    }\n  }, [inputValue])\n  const renderDetailedView = useMemo(() => (selectedItem: any) => {\n    const {row1, row2, row3, row4} = getDateForRenderDetailView(selectedItem);\n    return <CardInfo\n      row1={row1}\n      row2={row2}\n      row3={row3}\n      row4={row4}\n    />\n  }, [])\n  return (\n    <div className=\"App\">\n      {error\n        ? <Alert variant=\"filled\" severity=\"error\">\n          We have a problem, reload the page please!\n        </Alert>\n        : <div className=\"AppWrapper\">\n            <TextAreaField\n              value={inputValue}\n              changeInputValue={changeInputValue}\n              hideSelectedItem={hideSelectedItem}\n            />\n            <div className=\"AppList\">\n              {listItemsValue && <ItemsList\n                inputValue={inputValue}\n                listItemsValue={listItemsValue}\n                selectItem={selectItem}\n                hideItemList={hideItemList}\n                changeInputValue={changeInputValue}\n                getHighlightedText={getHighlightedText}\n              />}\n            </div>\n          <div className=\"AppItem\">\n            {selectedItem && renderDetailedView(selectedItem)}\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}